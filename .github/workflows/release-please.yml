on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        if: ${{ github.ref_name == 'main' }}
        with:
          release-type: node
          package-name: lib-address
          changelog-notes-type: github

  release-npm-ackage:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.releases_created }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
      
      - name: Setup Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps (with cache)
        run: pnpm install

      - name: Build
        run: pnpm build

      - run: npm install -g npm

      - name: Publish to npm latest
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
